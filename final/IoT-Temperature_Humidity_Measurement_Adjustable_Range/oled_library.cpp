#include "oled_library.h"

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// 'wifi', 50x50px
const unsigned char wifiIcon [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xfe, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 
  0x3f, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x01, 0xff, 0xff, 
  0xff, 0xff, 0xe0, 0x00, 0x07, 0xff, 0x80, 0x00, 0x7f, 0xf8, 0x00, 0x0f, 0xfc, 0x00, 0x00, 0x0f, 
  0xfc, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0x03, 0xff, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0xff, 0x80, 
  0x7f, 0x80, 0x00, 0x00, 0x00, 0x7f, 0x80, 0xfe, 0x00, 0x3f, 0xff, 0x00, 0x1f, 0xc0, 0xfc, 0x00, 
  0xff, 0xff, 0xc0, 0x0f, 0xc0, 0x78, 0x07, 0xff, 0xff, 0xf8, 0x07, 0xc0, 0x30, 0x0f, 0xff, 0xff, 
  0xfc, 0x03, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x7f, 0xf8, 0x07, 0xff, 0x80, 
  0x00, 0x00, 0xff, 0x80, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0xff, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x01, 
  0xfc, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x70, 0x0f, 
  0xfc, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x80, 
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xe0, 0x00, 0x00, 
  0x00, 0x01, 0xfe, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x01, 
  0xe0, 0x01, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf8, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
  0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

custom_oled_lib::custom_oled_lib():oled(128, 64, &Wire, -1){}

void custom_oled_lib::init_oled(){
  if(!oled.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;);
  }
  delay(1000);
  oled.clearDisplay();
  oled.setTextColor(WHITE);
}

void custom_oled_lib::show_wifi(){
  oled.clearDisplay();
  oled.setTextColor(WHITE);
  oled.drawBitmap(44, 0, wifiIcon, 50, 50, WHITE); 
  oled.setTextSize(1);
  oled.setCursor(25,55);  
  oled.println(F("Connecting Wifi"));
  oled.display(); //tampilkan data
}

void custom_oled_lib::show_data(float suhu, float bot_limit_suhu, float top_limit_suhu, float kelembaban, float bot_limit_humid, float top_limit_humid){
  // clear display
  oled.clearDisplay();
  
  // display temperature
  oled.setTextSize(1);
  oled.setCursor(0,0);
  oled.print("Digital Measurement");
  oled.setTextSize(1);
  oled.setCursor(0,10);
  oled.print("Temperature: ("+String(int(round(bot_limit_suhu)))+"-"+ String(int(round(top_limit_suhu)))+")");
  oled.setTextSize(2);
  oled.setCursor(0,20);
  oled.print(suhu);
  oled.print(" ");
  oled.setTextSize(1);
  oled.cp437(true);
  oled.write(167);
  oled.setTextSize(2);
  oled.print("C");
  
  // display humidity
  oled.setTextSize(1);
  oled.setCursor(0, 40);
  oled.print("Humidity: ("+String(int(round(bot_limit_humid)))+"-"+ String(int(round(top_limit_humid)))+")");
  oled.setTextSize(2);
  oled.setCursor(0, 50);
  oled.print(kelembaban);
  oled.print(" %"); 
  oled.display(); 
}
